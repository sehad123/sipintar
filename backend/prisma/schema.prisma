// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  password      String?
  role          String    @default("Mahasiswa") // Hanya "Alumni", "Dosen", atau "Mahasiswa"
  createdAt     DateTime  @default(now())
  no_hp         String?
  peminjaman    Peminjaman[]
  accounts      Account[]
  sessions      Session[]
}
model Account {
  id                Int       @id @default(autoincrement())
  userId            Int
  provider          String
  providerAccountId String
  type              String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?
  user              User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}




model KategoriAset {
  id       Int      @id @default(autoincrement())
  kategori String?
  barang   Aset[] // Relasi ke model Barang
}



model Aset {
  id         Int              @id @default(autoincrement())
  name       String
  kategoriId Int              // Jenis barang
  jumlah Int?              // Jenis barang
  kondisi    String?
  available   String?    // Ubah ke String jika ingin menggunakan "Ya" atau "Tidak"
  lokasi     String?
  createdAt  DateTime         @default(now())
  peminjaman Peminjaman[]
  photo      String?          // Field untuk menyimpan URL foto
  kategori   KategoriAset   @relation(fields: [kategoriId], references: [id])
}
model Peminjaman {
  id         Int              @id @default(autoincrement())
  userId     Int
  barangId   Int
  keperluan  String?
  nama_kegiatan   String?
  bukti_persetujuan String?          // Kolom untuk menyimpan URL atau path file bukti persetujuan
  bukti_pengembalian String?          // Kolom untuk menyimpan URL atau path file bukti persetujuan
  catatan String?          // Kolom untuk menyimpan URL atau path file bukti persetujuan
  startDate  DateTime
  endDate    DateTime
  startTime  String?           // Kolom untuk waktu mulai (misalnya "17:20")
  endTime    String?          // Kolom untuk waktu selesai (misalnya "17:20")
  status     StatusPeminjaman @default(PENDING)
  notifikasi String?
  createdAt  DateTime         @default(now())
  jumlahBarang Int?
  user       User             @relation(fields: [userId], references: [id])
  barang     Aset           @relation(fields: [barangId], references: [id])
}





enum StatusPeminjaman {
  PENDING
  APPROVED
  REJECTED
  DIKEMBALIKAN
  DIPINJAM
}


